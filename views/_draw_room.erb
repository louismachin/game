// Game rendering
function drawTileGrid() {
    ctx.strokeStyle = '#bdc3c7'
    ctx.lineWidth = 1
    
    // Draw vertical lines
    for (let x = 0; x <= ROOM_WIDTH; x++) {
        ctx.beginPath()
        ctx.moveTo(x * TILE_SIZE, 0)
        ctx.lineTo(x * TILE_SIZE, canvas.height)
        ctx.stroke()
    }
    
    // Draw horizontal lines
    for (let y = 0; y <= ROOM_HEIGHT; y++) {
        ctx.beginPath()
        ctx.moveTo(0, y * TILE_SIZE)
        ctx.lineTo(canvas.width, y * TILE_SIZE)
        ctx.stroke()
    }
}

function drawRoom() {
    // Clear canvas
    ctx.fillStyle = '#ecf0f1'
    ctx.fillRect(0, 0, canvas.width, canvas.height)
    
    // Draw room borders
    ctx.fillStyle = '#2c3e50'
    ctx.fillRect(0, 0, canvas.width, TILE_SIZE) // Top wall
    ctx.fillRect(0, 0, TILE_SIZE, canvas.height) // Left wall
    ctx.fillRect(canvas.width - TILE_SIZE, 0, TILE_SIZE, canvas.height) // Right wall
    ctx.fillRect(0, canvas.height - TILE_SIZE, canvas.width, TILE_SIZE) // Bottom wall
    
    ctx.fillStyle = '#d5dbdb'
    for (let x = 1; x < ROOM_WIDTH - 1; x += 1) {
        for (let y = 1; y < ROOM_HEIGHT - 1; y += 1) {
            if ((x + y) % 2 == 0) continue
            ctx.fillRect(
                x * TILE_SIZE + 4,
                y * TILE_SIZE + 4, 
                TILE_SIZE - 8,
                TILE_SIZE - 8
            )
        }
    }

    // Test collision
    ctx.fillStyle = '#521e2a'
    ctx.fillRect(
        4 * TILE_SIZE + 4,
        4 * TILE_SIZE + 4, 
        TILE_SIZE - 8,
        TILE_SIZE - 8
    )
    
    // Draw grid
    drawTileGrid()
}